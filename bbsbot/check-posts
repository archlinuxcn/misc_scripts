#!/usr/bin/python3

import tomllib
import logging
import socket
import json
import time
import struct

from fluxbbclient import FluxBB
from nicelogger import enable_pretty_logging
from htmlutils import parse_document_from_requests

def main(args):
  with open(args.config, 'rb') as fp:
    config = tomllib.load(fp)

  f = FluxBB(
    baseurl = 'https://bbs.archlinuxcn.org/',
    cookiefile = config['account']['cookiefile'],
  )
  while True:
    try:
      run_once(f, config)
      time.sleep(600)
    except Exception:
      logging.exception('error')
      time.sleep(60)
    except KeyboardInterrupt:
      print()
      break

def run_once(f, config):
  try:
    new_posts, new_posts_doc = f.get_new_posts()
  except PermissionError:
    logging.info('login...')
    if not f.login(
      config['account']['username'],
      config['account']['password'],
    ):
      raise
    new_posts, new_posts_doc = f.get_new_posts()

  matrix_config = config['matrix']
  target = matrix_config['target_room']
  s = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
  s.connect(matrix_config['socket_path'])

  for p in new_posts:
    logging.info('got post: %r', p)
    if p.subforum == 'Off-Topic':
      continue

    r = f.request(f'{p.link}&action=new')
    anchor = r.url.split('#')[1]
    doc = parse_document_from_requests(r)
    post = doc.xpath(f'//div[@id="{anchor}"]')[0]
    nr = post.xpath('.//span[@class="conr"]')[0].text
    if nr != '#1':
      continue

    message = f'论坛新帖：{p.subforum} » {p.title}（by {p.author}）\n{p.link}'
    html_message = f'论坛新帖：{p.subforum} » <a href="{p.link}">{p.title}</a>（by {p.author}）'
    msg = {
      'cmd': 'send_message',
      'target': target,
      'content': message,
      'html_content': html_message,
    }
    m = json.dumps(msg, ensure_ascii=False).encode()
    size = struct.pack('>I', len(m))
    s.sendall(size)
    s.sendall(m)
  s.close()

  if new_posts:
    f.mark_all_as_read(new_posts_doc)

if __name__ == '__main__':
  try:
    import setproctitle
    setproctitle.setproctitle('check-posts')
  except ImportError:
    pass

  enable_pretty_logging(logging.DEBUG)
  import argparse
  parser = argparse.ArgumentParser(description='Arch Linux 中文论坛新帖转发')
  parser.add_argument('config', help='配置文件')
  args = parser.parse_args()
  main(args)
